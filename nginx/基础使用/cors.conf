worker_processes  4;
events {
    worker_connections  1024;
}
http {  
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;
    gzip on;
    

    # 127.0.0.1:8005 里面ajax调用了请求http://facebeet.com（127.0.0.1:8003）产生跨域
    upstream facebeet {
        server 127.0.0.1:8003;
    }
    
    server {
        listen       80;
        server_name  facebeet.com;
        charset utf-8;
        proxy_connect_timeout 90;          #nginx跟后端服务器连接超时时间(代理连接超时)
        proxy_send_timeout 90;             #后端服务器数据回传时间(代理发送超时)
        client_max_body_size 10m;  
        client_body_buffer_size 128k;  
        
        # 实际上不是非简单请求的且不带cookie只需2个字段即可解决跨域
        # add_header Access-Control-Allow-Methods *;
        # add_header Access-Control-Allow-Origin $http_origin

        location / {
            # 因此在http://facebeet.com 设置cors让其可以跨域。
            #   指定允许跨域的方法，*代表所有
            add_header Access-Control-Allow-Methods *;

            #   预检命令的缓存，如果不缓存每次会发送两次请求
            add_header Access-Control-Max-Age 3600;
            #   带cookie请求需要加上这个字段，并设置为true
            add_header Access-Control-Allow-Credentials true;

            #   表示允许这个域跨域调用（客户端发送请求的域名和端口） 
            #   $http_origin动态获取请求客户端请求的域   不用*的原因是带cookie的请求不支持*号
            add_header Access-Control-Allow-Origin $http_origin;

            #   表示请求头的字段 动态获取
            add_header Access-Control-Allow-Headers 
            $http_access_control_request_headers;

            #   OPTIONS预检命令，预检命令通过时才发送请求
            #   检查请求的类型是不是预检命令
            if ($request_method = OPTIONS){
                return 200;
            }
            proxy_pass http://facebeet;
        }

    } 
} 