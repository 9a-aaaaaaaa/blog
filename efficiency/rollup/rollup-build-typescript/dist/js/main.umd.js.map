{"version":3,"file":"main.umd.js","sources":["../../node_modules/lodash-es/join.js","../../src/cjs/index.js","../../src/app.js","../../src/fetch/index.js"],"sourcesContent":["/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nexport default join;\n","module.exports = {\n    name:\"yach\",\n    getVersion: function(){\n        return this.name;\n    }\n}","\nimport { name,version  } from \"../package.json\";\nimport { join } from 'lodash-es';\nimport yach from './cjs';\nimport fetchApi from './fetch'\nimport { log } from \"./logger\"\n\n\nconst skd ={\n    name,\n    version,\n    val: join([1,2,3,4,5],'@'),\n    data: [1],\n    getVersion: ()=>{\n        console.log(\"哈哈哈\");\n        const version = yach.getVersion();\n        log(\"Hello world rollup build\",version);\n        if(process.env.NODE_ENV === 'production') {\n            log(99999)\n        }\n        else {\n            log(8888)\n        }\n    },\n    request: async ()=>{\n        const getData = await fetchApi(1);\n        return getData;\n    }\n}\nexport default skd;\n\n// import(\"./logger\").then(({log})=>{\n//     log(\"This is dynamic import infomation!\");\n// })\n\n\n// import { info,log } from \"./logger/index\";\n\n// fetchApi(1).then( data=>{\n//     log(data)\n// })","export default endpoint =>{\n    return fetch(`https://jsonplaceholder.typicode.com/todos/${endpoint}`)\n    .then(response => response.json())\n    .then(json => console.log(json))\n}"],"names":["nativeJoin","Array","prototype","join","cjs","name","getVersion","this","array","separator","version","val","call","data","yach","request","async","endpoint","fetch","then","response","json"],"mappings":"wOAIIA,EAHaC,MAAMC,UAGKC,KCJ5B,IAAAC,EAAiB,CACbC,KAAK,OACLC,WAAY,WACR,OAAOC,KAAKF,IACf,GDiBL,IAAcG,EAAOC,QEbV,CACPJ,+BACAK,gBACAC,KFUUH,EEVA,CAAC,EAAE,EAAE,EAAE,EAAE,GFUFC,EEVK,IFWR,MAATD,EAAgB,GAAKR,EAAWY,KAAKJ,EAAOC,IEVjDI,KAAM,CAAC,GACPP,WAAY,KAEQQ,EAAKR,YAOpB,EAELS,QAASC,UCxBEC,MD0BP,aC1BOA,EDyBwB,ECxB5BC,MAAM,8CAA8CD,KAC1DE,MAAKC,GAAYA,EAASC,SAC1BF,MAAKE,IAAyB,IDuBb"}